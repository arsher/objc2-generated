//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
#[cfg(feature = "objc2")]
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/imagecapturecore/icrunloopmode?language=objc)
    #[cfg(feature = "objc2")]
    pub static ICRunLoopMode: Option<&'static NSString>;
}

extern "C" {
    /// Type representing EXIF Orientation tag value
    ///
    /// The meaning of this value is defined by the EXIF specification. Here is what the letter F would look like if it were tagged correctly and displayed by a program that ignores the orientation tag (thus showing the stored image):
    ///
    /// 1             2             3             4
    ///
    /// 8888888       8888888            88       88
    /// 88                 88            88       88
    /// 8888             8888          8888       8888
    /// 88                 88            88       88
    /// 88                 88       8888888       8888888
    ///
    /// 5             6             7             8
    ///
    /// 8888888888    88                    88    8888888888
    /// 88  88        88  88            88  88        88  88
    /// 88            8888888888    8888888888            88
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/imagecapturecore/icerrordomain?language=objc)
    #[cfg(feature = "objc2")]
    pub static ICErrorDomain: Option<&'static NSErrorDomain>;
}

/// [Apple's documentation](https://developer.apple.com/documentation/imagecapturecore/icexiforientationtype?language=objc)
// NS_ENUM
#[cfg(feature = "objc2")]
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct ICEXIFOrientationType(pub NSUInteger);
#[cfg(feature = "objc2")]
impl ICEXIFOrientationType {
    pub const ICEXIFOrientation1: Self = Self(1);
    pub const ICEXIFOrientation2: Self = Self(2);
    pub const ICEXIFOrientation3: Self = Self(3);
    pub const ICEXIFOrientation4: Self = Self(4);
    pub const ICEXIFOrientation5: Self = Self(5);
    pub const ICEXIFOrientation6: Self = Self(6);
    pub const ICEXIFOrientation7: Self = Self(7);
    pub const ICEXIFOrientation8: Self = Self(8);
}

#[cfg(feature = "objc2")]
unsafe impl Encode for ICEXIFOrientationType {
    const ENCODING: Encoding = NSUInteger::ENCODING;
}

#[cfg(feature = "objc2")]
unsafe impl RefEncode for ICEXIFOrientationType {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/imagecapturecore/icreturncodeoffset?language=objc)
// NS_ENUM
#[cfg(feature = "objc2")]
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct ICReturnCodeOffset(pub NSInteger);
#[cfg(feature = "objc2")]
impl ICReturnCodeOffset {
    pub const ICReturnCodeThumbnailOffset: Self = Self(-21000);
    pub const ICReturnCodeMetadataOffset: Self = Self(-21050);
    pub const ICReturnCodeDownloadOffset: Self = Self(-21100);
    pub const ICReturnCodeDeleteOffset: Self = Self(-21150);
    pub const ICReturnCodeExFATOffset: Self = Self(-21200);
    pub const ICReturnCodePTPOffset: Self = Self(-21250);
    pub const ICReturnCodeSystemOffset: Self = Self(-21300);
    pub const ICReturnCodeDeviceOffset: Self = Self(-21350);
    pub const ICReturnCodeDeviceConnection: Self = Self(-21400);
    pub const ICReturnCodeObjectOffset: Self = Self(-21450);
}

#[cfg(feature = "objc2")]
unsafe impl Encode for ICReturnCodeOffset {
    const ENCODING: Encoding = NSInteger::ENCODING;
}

#[cfg(feature = "objc2")]
unsafe impl RefEncode for ICReturnCodeOffset {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/imagecapturecore/icreturnthumbnailerrorcode?language=objc)
// NS_ERROR_ENUM
#[cfg(feature = "objc2")]
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct ICReturnThumbnailErrorCode(pub NSInteger);
#[cfg(feature = "objc2")]
impl ICReturnThumbnailErrorCode {
    pub const ICReturnThumbnailNotAvailable: Self = Self(-21000);
    pub const ICReturnThumbnailAlreadyFetching: Self = Self(-20999);
    pub const ICReturnThumbnailCanceled: Self = Self(-20098);
    pub const ICReturnThumbnailInvalid: Self = Self(-20097);
}

#[cfg(feature = "objc2")]
unsafe impl Encode for ICReturnThumbnailErrorCode {
    const ENCODING: Encoding = NSInteger::ENCODING;
}

#[cfg(feature = "objc2")]
unsafe impl RefEncode for ICReturnThumbnailErrorCode {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/imagecapturecore/icreturnmetadataerrorcode?language=objc)
// NS_ERROR_ENUM
#[cfg(feature = "objc2")]
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct ICReturnMetadataErrorCode(pub NSInteger);
#[cfg(feature = "objc2")]
impl ICReturnMetadataErrorCode {
    pub const ICReturnMetadataNotAvailable: Self = Self(-20150);
    pub const ICReturnMetadataAlreadyFetching: Self = Self(-20149);
    pub const ICReturnMetadataCanceled: Self = Self(-20148);
    pub const ICReturnMetadataInvalid: Self = Self(-20147);
}

#[cfg(feature = "objc2")]
unsafe impl Encode for ICReturnMetadataErrorCode {
    const ENCODING: Encoding = NSInteger::ENCODING;
}

#[cfg(feature = "objc2")]
unsafe impl RefEncode for ICReturnMetadataErrorCode {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/imagecapturecore/icreturnconnectionerrorcode?language=objc)
// NS_ERROR_ENUM
#[cfg(feature = "objc2")]
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct ICReturnConnectionErrorCode(pub NSInteger);
#[cfg(feature = "objc2")]
impl ICReturnConnectionErrorCode {
    pub const ICReturnConnectionDriverExited: Self = Self(-21350);
    pub const ICReturnConnectionClosedSessionSuddenly: Self = Self(-21349);
    pub const ICReturnConnectionEjectedSuddenly: Self = Self(-21348);
    pub const ICReturnConnectionSessionAlreadyOpen: Self = Self(-21347);
    pub const ICReturnConnectionEjectFailed: Self = Self(-21346);
    pub const ICReturnConnectionFailedToOpen: Self = Self(-21345);
    pub const ICReturnConnectionFailedToOpenDevice: Self = Self(-21344);
    pub const ICReturnConnectionNotAuthorizedToOpenDevice: Self = Self(-21343);
}

#[cfg(feature = "objc2")]
unsafe impl Encode for ICReturnConnectionErrorCode {
    const ENCODING: Encoding = NSInteger::ENCODING;
}

#[cfg(feature = "objc2")]
unsafe impl RefEncode for ICReturnConnectionErrorCode {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/imagecapturecore/icreturnptpdeviceerrorcode?language=objc)
// NS_ERROR_ENUM
#[cfg(feature = "objc2")]
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct ICReturnPTPDeviceErrorCode(pub NSInteger);
#[cfg(feature = "objc2")]
impl ICReturnPTPDeviceErrorCode {
    pub const ICReturnPTPFailedToSendCommand: Self = Self(-21250);
    pub const ICReturnPTPNotAuthorizedToSendCommand: Self = Self(-21249);
}

#[cfg(feature = "objc2")]
unsafe impl Encode for ICReturnPTPDeviceErrorCode {
    const ENCODING: Encoding = NSInteger::ENCODING;
}

#[cfg(feature = "objc2")]
unsafe impl RefEncode for ICReturnPTPDeviceErrorCode {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/imagecapturecore/icreturndownloaderrorcode?language=objc)
// NS_ERROR_ENUM
#[cfg(feature = "objc2")]
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct ICReturnDownloadErrorCode(pub NSInteger);
#[cfg(feature = "objc2")]
impl ICReturnDownloadErrorCode {
    pub const ICReturnDownloadPathInvalid: Self = Self(-21100);
    pub const ICReturnDownloadFileWritable: Self = Self(-21099);
}

#[cfg(feature = "objc2")]
unsafe impl Encode for ICReturnDownloadErrorCode {
    const ENCODING: Encoding = NSInteger::ENCODING;
}

#[cfg(feature = "objc2")]
unsafe impl RefEncode for ICReturnDownloadErrorCode {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/imagecapturecore/iclegacyreturncode?language=objc)
// NS_ERROR_ENUM
#[cfg(feature = "objc2")]
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct ICLegacyReturnCode(pub NSInteger);
#[cfg(feature = "objc2")]
impl ICLegacyReturnCode {
    #[doc(alias = "ICLegacyReturnCodeCommunicationErr")]
    pub const CommunicationErr: Self = Self(-9900);
    #[doc(alias = "ICLegacyReturnCodeDeviceNotFoundErr")]
    pub const DeviceNotFoundErr: Self = Self(-9901);
    #[doc(alias = "ICLegacyReturnCodeDeviceNotOpenErr")]
    pub const DeviceNotOpenErr: Self = Self(-9902);
    #[doc(alias = "ICLegacyReturnCodeFileCorruptedErr")]
    pub const FileCorruptedErr: Self = Self(-9903);
    #[doc(alias = "ICLegacyReturnCodeIOPendingErr")]
    pub const IOPendingErr: Self = Self(-9904);
    #[doc(alias = "ICLegacyReturnCodeInvalidObjectErr")]
    pub const InvalidObjectErr: Self = Self(-9905);
    #[doc(alias = "ICLegacyReturnCodeInvalidPropertyErr")]
    pub const InvalidPropertyErr: Self = Self(-9906);
    #[doc(alias = "ICLegacyReturnCodeIndexOutOfRangeErr")]
    pub const IndexOutOfRangeErr: Self = Self(-9907);
    #[doc(alias = "ICLegacyReturnCodePropertyTypeNotFoundErr")]
    pub const PropertyTypeNotFoundErr: Self = Self(-9908);
    #[doc(alias = "ICLegacyReturnCodeCannotYieldDevice")]
    pub const CannotYieldDevice: Self = Self(-9909);
    #[doc(alias = "ICLegacyReturnCodeDataTypeNotFoundErr")]
    pub const DataTypeNotFoundErr: Self = Self(-9910);
    #[doc(alias = "ICLegacyReturnCodeDeviceMemoryAllocationErr")]
    pub const DeviceMemoryAllocationErr: Self = Self(-9911);
    #[doc(alias = "ICLegacyReturnCodeDeviceInternalErr")]
    pub const DeviceInternalErr: Self = Self(-9912);
    #[doc(alias = "ICLegacyReturnCodeDeviceInvalidParamErr")]
    pub const DeviceInvalidParamErr: Self = Self(-9913);
    #[doc(alias = "ICLegacyReturnCodeDeviceAlreadyOpenErr")]
    pub const DeviceAlreadyOpenErr: Self = Self(-9914);
    #[doc(alias = "ICLegacyReturnCodeDeviceLocationIDNotFoundErr")]
    pub const DeviceLocationIDNotFoundErr: Self = Self(-9915);
    #[doc(alias = "ICLegacyReturnCodeDeviceGUIDNotFoundErr")]
    pub const DeviceGUIDNotFoundErr: Self = Self(-9916);
    #[doc(alias = "ICLegacyReturnCodeDeviceIOServicePathNotFoundErr")]
    pub const DeviceIOServicePathNotFoundErr: Self = Self(-9917);
    #[doc(alias = "ICLegacyReturnCodeDeviceUnsupportedErr")]
    pub const DeviceUnsupportedErr: Self = Self(-9918);
    #[doc(alias = "ICLegacyReturnCodeFrameworkInternalErr")]
    pub const FrameworkInternalErr: Self = Self(-9919);
    #[doc(alias = "ICLegacyReturnCodeExtensionInternalErr")]
    pub const ExtensionInternalErr: Self = Self(-9920);
    #[doc(alias = "ICLegacyReturnCodeInvalidSessionErr")]
    pub const InvalidSessionErr: Self = Self(-9921);
}

#[cfg(feature = "objc2")]
unsafe impl Encode for ICLegacyReturnCode {
    const ENCODING: Encoding = NSInteger::ENCODING;
}

#[cfg(feature = "objc2")]
unsafe impl RefEncode for ICLegacyReturnCode {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/imagecapturecore/icreturncode?language=objc)
// NS_ERROR_ENUM
#[cfg(feature = "objc2")]
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct ICReturnCode(pub NSInteger);
#[cfg(feature = "objc2")]
impl ICReturnCode {
    pub const ICReturnSuccess: Self = Self(0);
    pub const ICReturnInvalidParam: Self = Self(-9922);
    pub const ICReturnCommunicationTimedOut: Self = Self(-9923);
    pub const ICReturnScanOperationCanceled: Self = Self(-9924);
    pub const ICReturnScannerInUseByLocalUser: Self = Self(-9925);
    pub const ICReturnScannerInUseByRemoteUser: Self = Self(-9926);
    pub const ICReturnDeviceFailedToOpenSession: Self = Self(-9927);
    pub const ICReturnDeviceFailedToCloseSession: Self = Self(-9928);
    pub const ICReturnScannerFailedToSelectFunctionalUnit: Self = Self(-9929);
    pub const ICReturnScannerFailedToCompleteOverviewScan: Self = Self(-9930);
    pub const ICReturnScannerFailedToCompleteScan: Self = Self(-9931);
    pub const ICReturnReceivedUnsolicitedScannerStatusInfo: Self = Self(-9932);
    pub const ICReturnReceivedUnsolicitedScannerErrorInfo: Self = Self(-9933);
    pub const ICReturnDownloadFailed: Self = Self(-9934);
    pub const ICReturnUploadFailed: Self = Self(-9935);
    pub const ICReturnFailedToCompletePassThroughCommand: Self = Self(-9936);
    pub const ICReturnDownloadCanceled: Self = Self(-9937);
    pub const ICReturnFailedToEnabeTethering: Self = Self(-9938);
    pub const ICReturnFailedToDisabeTethering: Self = Self(-9939);
    pub const ICReturnFailedToCompleteSendMessageRequest: Self = Self(-9940);
    pub const ICReturnDeleteFilesFailed: Self = Self(-9941);
    pub const ICReturnDeleteFilesCanceled: Self = Self(-9942);
    pub const ICReturnDeviceIsPasscodeLocked: Self = Self(-9943);
    pub const ICReturnDeviceFailedToTakePicture: Self = Self(-9944);
    pub const ICReturnDeviceSoftwareNotInstalled: Self = Self(-9945);
    pub const ICReturnDeviceSoftwareIsBeingInstalled: Self = Self(-9946);
    pub const ICReturnDeviceSoftwareInstallationCompleted: Self = Self(-9947);
    pub const ICReturnDeviceSoftwareInstallationCanceled: Self = Self(-9948);
    pub const ICReturnDeviceSoftwareInstallationFailed: Self = Self(-9949);
    pub const ICReturnDeviceSoftwareNotAvailable: Self = Self(-9950);
    pub const ICReturnDeviceCouldNotPair: Self = Self(-9951);
    pub const ICReturnDeviceCouldNotUnpair: Self = Self(-9952);
    pub const ICReturnDeviceNeedsCredentials: Self = Self(-9953);
    pub const ICReturnDeviceIsBusyEnumerating: Self = Self(-9954);
    pub const ICReturnDeviceCommandGeneralFailure: Self = Self(-9955);
    pub const ICReturnDeviceFailedToCompleteTransfer: Self = Self(-9956);
    pub const ICReturnDeviceFailedToSendData: Self = Self(-9957);
    pub const ICReturnSessionNotOpened: Self = Self(-9958);
    pub const ICReturnExFATVolumeInvalid: Self = Self(21200);
    pub const ICReturnMultiErrorDictionary: Self = Self(-30000);
}

#[cfg(feature = "objc2")]
unsafe impl Encode for ICReturnCode {
    const ENCODING: Encoding = NSInteger::ENCODING;
}

#[cfg(feature = "objc2")]
unsafe impl RefEncode for ICReturnCode {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/imagecapturecore/icreturnobjecterrorcode?language=objc)
// NS_ERROR_ENUM
#[cfg(feature = "objc2")]
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct ICReturnObjectErrorCode(pub NSInteger);
#[cfg(feature = "objc2")]
impl ICReturnObjectErrorCode {
    pub const ICReturnCodeObjectDoesNotExist: Self = Self(-21450);
    pub const ICReturnCodeObjectDataOffsetInvalid: Self = Self(-21449);
    pub const ICReturnCodeObjectCouldNotBeRead: Self = Self(-21448);
    pub const ICReturnCodeObjectDataEmpty: Self = Self(-21447);
    pub const ICReturnCodeObjectDataRequestTooLarge: Self = Self(-21446);
}

#[cfg(feature = "objc2")]
unsafe impl Encode for ICReturnObjectErrorCode {
    const ENCODING: Encoding = NSInteger::ENCODING;
}

#[cfg(feature = "objc2")]
unsafe impl RefEncode for ICReturnObjectErrorCode {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}
